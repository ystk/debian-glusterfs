# Upstream patch to fix CVE-2014-3619 (fragment header infinite loop DoS)
# URL: https://bugzilla.redhat.com/show_bug.cgi?id=1138145
# Patch: http://review.gluster.org/#/c/8662/4

diff -Naur glusterfs-3.5.2.orig/rpc/rpc-transport/socket/src/socket.c glusterfs-3.5.2/rpc/rpc-transport/socket/src/socket.c
--- glusterfs-3.5.2.orig/rpc/rpc-transport/socket/src/socket.c	2014-07-31 13:05:35.000000000 +0200
+++ glusterfs-3.5.2/rpc/rpc-transport/socket/src/socket.c	2015-03-23 15:28:00.765389702 +0100
@@ -375,10 +375,11 @@
 		/* first call after passing SP_STATE_READING_FRAGHDR */
 		in->ra_max = min (RPC_FRAGSIZE (in->fraghdr), GF_SOCKET_RA_MAX);
 		/* Note that the in->iobuf is the primary iobuf into which
-		   headers are read into. By using this itself as our
+		   headers are read into, and in->frag.fragcurrent points to
+ 		   some position in the buffer. By using this itself as our
 		   read-ahead cache, we can avoid memory copies in iov_load
 		*/
-		in->ra_buf = iobuf_ptr (in->iobuf);
+		in->ra_buf = in->frag.fragcurrent;
 	}
 
 	/* fill read-ahead */
@@ -1986,9 +1987,22 @@
                                 goto out;
                         }
 
+                        if (in->iobuf == NULL) {
+                            /* first fragment */
+                            frag->fragcurrent = iobuf_ptr (iobuf);
+                        } else {
+                            /* second or further fragment */
+                            memcpy(iobuf_ptr (iobuf), iobuf_ptr (in->iobuf),
+                               in->total_bytes_read - RPC_FRAGSIZE(in->fraghdr));
+                            iobuf_unref (in->iobuf);
+                            frag->fragcurrent = (char *) iobuf_ptr (iobuf) +
+                                in->total_bytes_read - RPC_FRAGSIZE(in->fraghdr);
+                            frag->pending_vector->iov_base = frag->fragcurrent;
+                            in->pending_vector = frag->pending_vector;
+                        }
+
                         in->iobuf = iobuf;
                         in->iobuf_size = 0;
-                        frag->fragcurrent = iobuf_ptr (iobuf);
                         in->record_state = SP_STATE_READING_FRAG;
                         /* fall through */
 
@@ -2003,6 +2017,9 @@
                         frag->bytes_read = 0;
 
                         if (!RPC_LASTFRAG (in->fraghdr)) {
+                                in->pending_vector = in->vector;
+                                in->pending_vector->iov_base = &in->fraghdr;
+                                in->pending_vector->iov_len = sizeof(in->fraghdr);
                                 in->record_state = SP_STATE_READING_FRAGHDR;
                                 break;
                         }
