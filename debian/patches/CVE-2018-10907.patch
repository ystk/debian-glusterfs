From: Markus Koschany <apo@debian.org>
Date: Wed, 19 Sep 2018 14:04:43 +0200
Subject: CVE-2018-10907

Origin: https://review.gluster.org/21070
---
 xlators/protocol/server/src/server-rpc-fops.c | 72 +++++++++++----------------
 1 file changed, 29 insertions(+), 43 deletions(-)

diff --git a/xlators/protocol/server/src/server-rpc-fops.c b/xlators/protocol/server/src/server-rpc-fops.c
index d69d51f..8cbd906 100644
--- a/xlators/protocol/server/src/server-rpc-fops.c
+++ b/xlators/protocol/server/src/server-rpc-fops.c
@@ -3543,8 +3543,6 @@ server3_3_create (rpcsvc_request_t *req)
         if (!req)
                 return ret;
 
-        args.bname = alloca (req->msg[0].iov_len);
-
         ret = xdr_to_generic (req->msg[0], &args,
                               (xdrproc_t)xdr_gfs3_create_req);
         if (ret < 0) {
@@ -4247,8 +4245,6 @@ server3_3_unlink (rpcsvc_request_t *req)
         if (!req)
                 return ret;
 
-        args.bname = alloca (req->msg[0].iov_len);
-
         ret = xdr_to_generic (req->msg[0], &args,
                               (xdrproc_t)xdr_gfs3_unlink_req);
         if (ret < 0) {
@@ -4288,6 +4284,7 @@ server3_3_unlink (rpcsvc_request_t *req)
         resolve_and_resume (frame, server_unlink_resume);
 out:
         free (args.xdata.xdata_val);
+        free (args.bname);
 
         if (op_errno)
                 SERVER_REQ_SET_ERROR (req, ret);
@@ -4309,8 +4306,6 @@ server3_3_setxattr (rpcsvc_request_t *req)
         if (!req)
                 return ret;
 
-        args.dict.dict_val = alloca (req->msg[0].iov_len);
-
         ret = xdr_to_generic (req->msg[0], &args,
                               (xdrproc_t)xdr_gfs3_setxattr_req);
         if (ret < 0) {
@@ -4386,7 +4381,6 @@ server3_3_fsetxattr (rpcsvc_request_t *req)
         if (!req)
                 return ret;
 
-        args.dict.dict_val = alloca (req->msg[0].iov_len);
         ret = xdr_to_generic (req->msg[0], &args,
                               (xdrproc_t)xdr_gfs3_fsetxattr_req);
         if (ret < 0) {
@@ -4460,7 +4454,6 @@ server3_3_fxattrop (rpcsvc_request_t *req)
         if (!req)
                 return ret;
 
-        args.dict.dict_val = alloca (req->msg[0].iov_len);
         ret = xdr_to_generic (req->msg[0], &args,
                               (xdrproc_t)xdr_gfs3_fxattrop_req);
         if (ret < 0) {
@@ -4510,6 +4503,7 @@ server3_3_fxattrop (rpcsvc_request_t *req)
 
 out:
         free (args.xdata.xdata_val);
+        free (args.dict.dict_val);
 
         if (op_errno)
                 SERVER_REQ_SET_ERROR (req, ret);
@@ -4535,8 +4529,6 @@ server3_3_xattrop (rpcsvc_request_t *req)
         if (!req)
                 return ret;
 
-        args.dict.dict_val = alloca (req->msg[0].iov_len);
-
         ret = xdr_to_generic (req->msg[0], &args,
                               (xdrproc_t)xdr_gfs3_xattrop_req);
         if (ret < 0) {
@@ -4584,6 +4576,7 @@ server3_3_xattrop (rpcsvc_request_t *req)
         return ret;
 out:
         free (args.xdata.xdata_val);
+        free (args.dict.dict_val);
 
         if (op_errno)
                 SERVER_REQ_SET_ERROR (req, ret);
@@ -4607,8 +4600,6 @@ server3_3_getxattr (rpcsvc_request_t *req)
         if (!req)
                 return ret;
 
-        args.name = alloca (256);
-
         ret = xdr_to_generic (req->msg[0], &args,
                               (xdrproc_t)xdr_gfs3_getxattr_req);
         if (ret < 0) {
@@ -4651,6 +4642,7 @@ server3_3_getxattr (rpcsvc_request_t *req)
         resolve_and_resume (frame, server_getxattr_resume);
 out:
         free (args.xdata.xdata_val);
+        free (args.name);
 
         if (op_errno)
                 SERVER_REQ_SET_ERROR (req, ret);
@@ -4671,7 +4663,6 @@ server3_3_fgetxattr (rpcsvc_request_t *req)
         if (!req)
                 return ret;
 
-        args.name = alloca (256);
         ret = xdr_to_generic (req->msg[0], &args,
                               (xdrproc_t)xdr_gfs3_fgetxattr_req);
         if (ret < 0) {
@@ -4712,6 +4703,7 @@ server3_3_fgetxattr (rpcsvc_request_t *req)
         resolve_and_resume (frame, server_fgetxattr_resume);
 out:
         free (args.xdata.xdata_val);
+        free (args.name);
 
         if (op_errno)
                 SERVER_REQ_SET_ERROR (req, ret);
@@ -4733,8 +4725,6 @@ server3_3_removexattr (rpcsvc_request_t *req)
         if (!req)
                 return ret;
 
-        args.name = alloca (256);
-
         ret = xdr_to_generic (req->msg[0], &args,
                               (xdrproc_t)xdr_gfs3_removexattr_req);
         if (ret < 0) {
@@ -4772,6 +4762,7 @@ server3_3_removexattr (rpcsvc_request_t *req)
         resolve_and_resume (frame, server_removexattr_resume);
 out:
         free (args.xdata.xdata_val);
+        free (args.name);
 
         if (op_errno)
                 SERVER_REQ_SET_ERROR (req, ret);
@@ -4791,8 +4782,6 @@ server3_3_fremovexattr (rpcsvc_request_t *req)
         if (!req)
                 return ret;
 
-        args.name = alloca (4096);
-
         ret = xdr_to_generic (req->msg[0], &args,
                               (xdrproc_t)xdr_gfs3_fremovexattr_req);
         if (ret < 0) {
@@ -4831,6 +4820,7 @@ server3_3_fremovexattr (rpcsvc_request_t *req)
         resolve_and_resume (frame, server_fremovexattr_resume);
 out:
         free (args.xdata.xdata_val);
+        free (args.name);
 
         if (op_errno)
                 SERVER_REQ_SET_ERROR (req, ret);
@@ -5108,8 +5098,6 @@ server3_3_mknod (rpcsvc_request_t *req)
         if (!req)
                 return ret;
 
-        args.bname = alloca (req->msg[0].iov_len);
-
         ret = xdr_to_generic (req->msg[0], &args,
                               (xdrproc_t)xdr_gfs3_mknod_req);
         if (ret < 0) {
@@ -5156,6 +5144,7 @@ out:
 
         /* memory allocated by libc, don't use GF_FREE */
         free (args.xdata.xdata_val);
+        free (args.bname);
 
         return ret;
 
@@ -5174,8 +5163,6 @@ server3_3_mkdir (rpcsvc_request_t *req)
         if (!req)
                 return ret;
 
-        args.bname = alloca (req->msg[0].iov_len);
-
         ret = xdr_to_generic (req->msg[0], &args,
                               (xdrproc_t)xdr_gfs3_mkdir_req);
         if (ret < 0) {
@@ -5221,6 +5208,7 @@ out:
                 SERVER_REQ_SET_ERROR (req, ret);
 
         free (args.xdata.xdata_val);
+        free (args.bname);
 
         return ret;
 }
@@ -5238,8 +5226,6 @@ server3_3_rmdir (rpcsvc_request_t *req)
         if (!req)
                 return ret;
 
-        args.bname = alloca (req->msg[0].iov_len);
-
         ret = xdr_to_generic (req->msg[0], &args,
                               (xdrproc_t)xdr_gfs3_rmdir_req);
         if (ret < 0) {
@@ -5279,6 +5265,7 @@ server3_3_rmdir (rpcsvc_request_t *req)
         resolve_and_resume (frame, server_rmdir_resume);
 out:
         free (args.xdata.xdata_val);
+        free (args.bname);
 
         if (op_errno)
                 SERVER_REQ_SET_ERROR (req, ret);
@@ -5301,8 +5288,6 @@ server3_3_inodelk (rpcsvc_request_t *req)
         if (!req)
                 return ret;
 
-        args.volume = alloca (256);
-
         ret = xdr_to_generic (req->msg[0], &args,
                               (xdrproc_t)xdr_gfs3_inodelk_req);
         if (ret < 0) {
@@ -5369,6 +5354,7 @@ server3_3_inodelk (rpcsvc_request_t *req)
         resolve_and_resume (frame, server_inodelk_resume);
 out:
         free (args.xdata.xdata_val);
+        free (args.volume);
 
         free (args.flock.lk_owner.lk_owner_val);
 
@@ -5390,7 +5376,6 @@ server3_3_finodelk (rpcsvc_request_t *req)
         if (!req)
                 return ret;
 
-        args.volume = alloca (256);
         ret = xdr_to_generic (req->msg[0], &args,
                               (xdrproc_t)xdr_gfs3_finodelk_req);
         if (ret < 0) {
@@ -5458,6 +5443,7 @@ server3_3_finodelk (rpcsvc_request_t *req)
         resolve_and_resume (frame, server_finodelk_resume);
 out:
         free (args.xdata.xdata_val);
+        free (args.volume);
 
         free (args.flock.lk_owner.lk_owner_val);
 
@@ -5480,9 +5466,6 @@ server3_3_entrylk (rpcsvc_request_t *req)
         if (!req)
                 return ret;
 
-        args.volume = alloca (256);
-        args.name   = alloca (256);
-
         ret = xdr_to_generic (req->msg[0], &args,
                               (xdrproc_t)xdr_gfs3_entrylk_req);
         if (ret < 0) {
@@ -5526,6 +5509,8 @@ server3_3_entrylk (rpcsvc_request_t *req)
         resolve_and_resume (frame, server_entrylk_resume);
 out:
         free (args.xdata.xdata_val);
+        free (args.volume);
+        free (args.name);
 
         if (op_errno)
                 SERVER_REQ_SET_ERROR (req, ret);
@@ -5545,9 +5530,6 @@ server3_3_fentrylk (rpcsvc_request_t *req)
         if (!req)
                 return ret;
 
-        args.name   = alloca (256);
-        args.volume = alloca (256);
-
         ret = xdr_to_generic (req->msg[0], &args,
                               (xdrproc_t)xdr_gfs3_fentrylk_req);
         if (ret < 0) {
@@ -5591,6 +5573,8 @@ server3_3_fentrylk (rpcsvc_request_t *req)
         resolve_and_resume (frame, server_fentrylk_resume);
 out:
         free (args.xdata.xdata_val);
+        free (args.volume);
+        free (args.name);
 
         if (op_errno)
                 SERVER_REQ_SET_ERROR (req, ret);
@@ -5668,9 +5652,6 @@ server3_3_symlink (rpcsvc_request_t *req)
         if (!req)
                 return ret;
 
-        args.bname    = alloca (req->msg[0].iov_len);
-        args.linkname = alloca (4096);
-
         ret = xdr_to_generic (req->msg[0], &args,
                               (xdrproc_t)xdr_gfs3_symlink_req);
         if (ret < 0) {
@@ -5715,6 +5696,8 @@ out:
 
         /* memory allocated by libc, don't use GF_FREE */
         free (args.xdata.xdata_val);
+        free (args.linkname);
+        free (args.bname);
 
         return ret;
 }
@@ -5733,8 +5716,6 @@ server3_3_link (rpcsvc_request_t *req)
         if (!req)
                 return ret;
 
-        args.newbname = alloca (req->msg[0].iov_len);
-
         ret = xdr_to_generic (req->msg[0], &args, (xdrproc_t)xdr_gfs3_link_req);
         if (ret < 0) {
                 //failed to decode msg;
@@ -5774,6 +5755,7 @@ server3_3_link (rpcsvc_request_t *req)
         resolve_and_resume (frame, server_link_resume);
 out:
         free (args.xdata.xdata_val);
+        free (args.newbname);
 
         if (op_errno)
                 SERVER_REQ_SET_ERROR (req, ret);
@@ -5794,9 +5776,6 @@ server3_3_rename (rpcsvc_request_t *req)
         if (!req)
                 return ret;
 
-        args.oldbname = alloca (req->msg[0].iov_len);
-        args.newbname = alloca (req->msg[0].iov_len);
-
         ret = xdr_to_generic (req->msg[0], &args,
                               (xdrproc_t)xdr_gfs3_rename_req);
         if (ret < 0) {
@@ -5838,6 +5817,8 @@ server3_3_rename (rpcsvc_request_t *req)
         resolve_and_resume (frame, server_rename_resume);
 out:
         free (args.xdata.xdata_val);
+        free (args.newbname);
+        free (args.oldbname);
 
         if (op_errno)
                 SERVER_REQ_SET_ERROR (req, ret);
@@ -6033,9 +6014,6 @@ server3_3_lookup (rpcsvc_request_t *req)
 
         GF_VALIDATE_OR_GOTO ("server", req, err);
 
-        args.bname           = alloca (req->msg[0].iov_len);
-        args.xdata.xdata_val = alloca (req->msg[0].iov_len);
-
         ret = xdr_to_generic (req->msg[0], &args,
                               (xdrproc_t)xdr_gfs3_lookup_req);
         if (ret < 0) {
@@ -6081,9 +6059,15 @@ server3_3_lookup (rpcsvc_request_t *req)
         ret = 0;
         resolve_and_resume (frame, server_lookup_resume);
 
+        free (args.bname);
+        free (args.xdata.xdata_val);
+
         return ret;
 out:
 
+        free (args.bname);
+        free (args.xdata.xdata_val);
+
         server_lookup_cbk (frame, NULL, frame->this, -1, EINVAL, NULL, NULL,
                            NULL, NULL);
         ret = 0;
@@ -6138,6 +6122,8 @@ server3_3_statfs (rpcsvc_request_t *req)
         ret = 0;
         resolve_and_resume (frame, server_statfs_resume);
 out:
+        free (args.xdata.xdata_val);
+
         if (op_errno)
                 SERVER_REQ_SET_ERROR (req, ret);
 
